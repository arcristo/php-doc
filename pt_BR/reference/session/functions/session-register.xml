<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 341344 Maintainer: ae Status: ready --><!-- CREDITS: surfmax,fernandoc,ae -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.session-register">
 <refnamediv>
  <refname>session_register</refname>
  <refpurpose>Registra uma ou mais variáveis globais na sessão atual</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_register</methodname>
   <methodparam><type>mixed</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>session_register</function> aceita um número de argumentos
   variáveis, alguns deles podem ser ou uma string com o nome da
   variável ou um array de nomes de variáveis ou outros arrays. Para
   cada nome, <function>session_register</function> registra a variável
   global com o nome na sessão atual.
  </para>
  <para>
   Você também pode criar uma variável de sessão simplesmente definindo o
   membro apropriado nos arrays <varname>$_SESSION</varname>.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// O uso de session_register() está obsoleto
$barney = "Um grande dinossauro roxo.";
session_register("barney");

// O uso de $_SESSION é preferível
$_SESSION["zim"] = "Um invasor de outro planeta.";
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   Se <function>session_start</function> não for chamada antes dessa função
   ser executada, uma chamada implícita a <function>session_start</function>, sem
   parâmetros, será feita.  <varname>$_SESSION</varname> não imita
   esse comportamento e requer <function>session_start</function> antes de seu uso.
  </para>
  &warn.deprecated.function-5-3-0.removed-5-4-0;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Uma string contento o nome de uma variável ou array com nomes de
       variáveis ou ainda outros arrays.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Se você deseja que seu script funcione independente de <link
    linkend="ini.register-globals">register_globals</link>, então o que deve ser
    usado é o array <varname>$_SESSION</varname>, pois entradas em
    <varname>$_SESSION</varname> são registrados automaticamente. Se
    o seu script utiliza <function>session_register</function>, ele não vai funcionar
    em ambientes onde a diretava <link
    linkend="ini.register-globals">register_globals</link> está desativada.
   </para>
  </caution>
  &note.registerglobals;
  <caution>
   <para>
    Isto registra uma variável <emphasis>global</emphasis>. Se você deseja
    registrar uma variável de dentro de uma função, então é necessário
    torná-la global utilizando a keyword <link
    linkend="language.variables.scope"><command>global</command></link>
    ou o array <varname>$GLOBALS[]</varname>, ou ainda utilizar os arrays
    especiais conforme abaixo.
   </para>
  </caution>
  <caution>
   <para>
    Se você está utilizando <varname>$_SESSION</varname>, então não use
    <function>session_register</function>,
    <function>session_is_registered</function> e
    <function>session_unregister</function>.
   </para>
  </caution>
  <note>
   <para>
    Atualmente é impossível registrar variáveis de recursos (resource) em uma sessão.
    Por exemplo, você não pode criar uma conexão a um banco de dados e armazenar a
    conexão em uma variável de sessão e esperar que a conexão ainda esteja
    válida quando a sessão for restaurada.  Funções do PHP que retornam um
    recurso (resource) são identificados pelo tipo
    <literal>resource</literal> em sua definição.  Uma lista de
    funções que retornam recursos está disponível no apêndice <link
    linkend="resource">Tipos de Recursos</link>.
   </para>
   <para>
    Se <varname>$_SESSION</varname> for utilizado, atribua valores para
    <varname>$_SESSION</varname>. Por exemplo: $_SESSION['var'] = 'ABC';
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_is_registered</function></member>
    <member><function>session_unregister</function></member>
    <member><varname>$_SESSION</varname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
